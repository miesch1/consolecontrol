<UserControl x:Class="ConsoleControlSample.WPF1.Components.RepoBrowser"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:utility="clr-namespace:ConsoleControlSample.WPF1.Utility"
             mc:Ignorable="d" d:DesignWidth="300">
    <UserControl.Resources>
        <utility:FileToUIElementConverter x:Key="FileToUIElementConverter"/>

        <Style x:Key="repoStatusIconStyle" TargetType="ContentControl">
            <Setter Property="ToolTip" Value="{x:Null}"/>
            <Setter Property="Content" Value="{Binding Converter={StaticResource FileToUIElementConverter}, ConverterParameter='/ConsoleControlSample.WPF1;component/Resources/StatusOK.xaml'}"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=SelectedDirectoryComboBox, Path=(Validation.HasError)}" Value="True" >
                    <Setter Property="ToolTip" Value="{Binding ElementName=SelectedDirectoryComboBox, Path=(Validation.Errors)/ErrorContent}" />
                    <Setter Property="Content" Value="{Binding Converter={StaticResource FileToUIElementConverter}, ConverterParameter='/ConsoleControlSample.WPF1;component/Resources/StatusInvalid.xaml'}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="placeholderTextBlockStyle" TargetType="TextBlock">
            <Setter Property="Visibility" Value="Hidden"/>
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding ElementName=SelectedDirectoryComboBox, Path=SelectedItem}" Value="{x:Null}"/>
                        <Condition Binding="{Binding ElementName=SelectedDirectoryComboBox, Path=Text}" Value="{x:Null}"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Visibility" Value="Visible"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding ElementName=SelectedDirectoryComboBox, Path=SelectedItem}" Value="{x:Null}"/>
                        <Condition Binding="{Binding ElementName=SelectedDirectoryComboBox, Path=Text}" Value=""/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Visibility" Value="Visible"/>
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <Grid x:Name="layoutRoot">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <!-- Debug code to see properties during drop down selection. Very finicky. -->
            <!--<RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>-->
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <!--NOTE, if this image ever needs to be resized, would need to add a Viewbox, similiar to what is done here:
        https://www.codeproject.com/Tips/1232987/WPF-Control-of-Image-to-be-Displayed-->
        <ContentControl Grid.Row="0" Grid.Column="0" Margin="2" Style="{StaticResource repoStatusIconStyle}"/>
        <TextBlock Grid.Row="0" Grid.Column="1" VerticalAlignment="Center" Margin="0,0,10,0">Repo Path:</TextBlock>
        <!--PlaceholderComboBoxControl - Could't get it to work following pattern of PlaceholderTextBoxControl-->
        <!--https://stackoverflow.com/a/16782339, but check out this other interesting answer https://stackoverflow.com/a/1426431-->
        <Grid Grid.Row="0" Grid.Column="2">
            <ComboBox x:Name="SelectedDirectoryComboBox"
                ItemsSource="{Binding Repos, Mode=OneWay}"
                IsEditable="True" IsTextSearchEnabled="True"
                SelectedItem="{Binding Path=SelectedRepo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                Text="{Binding Path=SelectedDirectory, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}"/>
            <TextBlock x:Name="PlaceholderTextBlock" Style="{StaticResource placeholderTextBlockStyle}"
                Margin="4,3,0,0"
                IsHitTestVisible="False"
                HorizontalAlignment="{Binding ElementName=SelectedDirectoryComboBox, Path=HorizontalContentAlignment}"
                VerticalAlignment="{Binding ElementName=SelectedDirectoryComboBox, Path=VerticalContentAlignment}"
                Opacity="0.5"
                Text="{Binding PlaceholderText}" />
        </Grid>
        <Button Grid.Row="0" Grid.Column="3" Margin="10,0,0,0" Padding="3,0" Click="FolderBrowser_Click"
                Content="{Binding Converter={StaticResource FileToUIElementConverter}, ConverterParameter='/ConsoleControlSample.WPF1;component/Resources/OpenFolder.xaml'}"/>
        <!-- Debug code to see properties during drop down selection. Very finicky. -->
        <!--<TextBlock Grid.Row="1" Grid.Column="0" Text="SelectedDirectory"/>
        <TextBlock Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" Text="{Binding SelectedDirectory}"/>
        <TextBlock Grid.Row="2" Grid.Column="0" Text="SelectedRepo"/>
        <TextBlock Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" Text="{Binding SelectedRepo}"/>
        <TextBlock Grid.Row="3" Grid.Column="0" Text="SelectedIndex"/>
        <TextBlock Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="2" Text="{Binding ElementName=SelectedDirectoryComboBox, Path=SelectedIndex}"/>
        <TextBlock Grid.Row="4" Grid.Column="0" Text="SelectedItem"/>
        <TextBlock Grid.Row="4" Grid.Column="1" Grid.ColumnSpan="2" Text="{Binding ElementName=SelectedDirectoryComboBox, Path=SelectedItem}"/>
        <TextBlock Grid.Row="5" Grid.Column="0" Text="Text"/>
        <TextBlock Grid.Row="5" Grid.Column="1" Grid.ColumnSpan="2" Text="{Binding ElementName=SelectedDirectoryComboBox, Path=Text}"/>
        <TextBlock Grid.Row="6" Grid.Column="0" Text="Validation.HasError"/>-->
        <!--<TextBlock Grid.Row="6" Grid.Column="1" Grid.ColumnSpan="2" Text="{Binding HasErrors}"/>-->
        <!--<TextBlock Grid.Row="6" Grid.Column="1" Grid.ColumnSpan="2" Text="{Binding ElementName=SelectedDirectoryComboBox, Path=(Validation.HasError)}"/>
        <TextBlock Grid.Row="7" Grid.Column="0" Text="Validation.ErrorContent"/>
        <TextBlock Grid.Row="7" Grid.Column="1" Grid.ColumnSpan="2" Text="{Binding ElementName=SelectedDirectoryComboBox, Path=(Validation.Errors)/ErrorContent}"/>-->
    </Grid>
</UserControl>

